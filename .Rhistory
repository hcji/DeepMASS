source('http://bioconductor.org/biocLite.R')
biocLite('SWATH2stats')
source('http://bioconductor.org/biocLite.R')
biocLite('SWATH2stats')
install.packages("BiocInstaller",
repos="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")
options(BioC_mirror="https://mirrors.tuna.tsinghua.edu.cn/bioconductor")
source('http://bioconductor.org/biocLite.R')
biocLite('SWATH2stats')
library(SWATH2stats)
library(data.table)
data('Spyogenes', package = 'SWATH2stats')
data <- data.frame(fread('rawOpenSwathResults_1pcnt_only.tsv', sep='\t', header=TRUE))
cfm_id <- "D:/CFM-ID/cfm-id-2.4_win32/cfm-id-precomputed.exe"
spectrum_file <- "E:/project/KMetC/kegg/kegg_measured_msms_spectra/C00002_40V.csv"
candidate_file <- "E:/project/KMetC/challenges/candidates/C00002.txt"
fileConn<-file("output.txt")
writeLines(c("Hello","World"), fileConn)
wd <- getwd()
fileConn <- file("temp_spec.txt")
writeLines("low", fileConn)
writeLines("med", fileConn)
writeLines("high", fileConn)
wd <- getwd()
fileConn <- file("temp_spec.txt")
writeLines("low", fileConn)
writeLines("med", fileConn)
writeLines("high", fileConn)
lines <- readLines(spectrum_file)
lines[-1]
l = lines[2]
l
strsplit(l,',')
l = lines[2]
l <- strsplit(l,',')[[1]]
paste(l)
cat(l)
fileConn <- file(description = 'temp_spec.txt', open = "w")
cat("low", file = fileConn)
cat("med", file = fileConn)
cat("high", file = fileConn)
for (l in lines[-1]) {
l <- strsplit(l,',')[[1]]
cat(l, file = fileConn)
}
close(fileConn)
wd <- getwd()
fileConn <- file(description = 'temp_spec.txt', open = "w")
cat(paste("low", "\r"), file = fileConn)
cat(paste("med", "\r"), file = fileConn)
cat(paste("high","\r"), file = fileConn)
for (l in lines[-1]) {
l <- strsplit(l,',')[[1]]
cat(paste(l, "\r"), file = fileConn)
}
close(fileConn)
wd <- getwd()
fileConn <- file(description = 'temp_spec.txt', open = "w")
cat(paste("low", "\r"), file = fileConn)
cat(paste("med", "\r"), file = fileConn)
cat(paste("high","\r"), file = fileConn)
for (l in lines[-1]) {
l <- strsplit(l,',')[[1]]
cat(paste(c(l), "\r"), file = fileConn)
}
close(fileConn)
wd <- getwd()
fileConn <- file(description = 'temp_spec.txt', open = "w")
cat(paste("low", "\r"), file = fileConn)
cat(paste("med", "\r"), file = fileConn)
cat(paste("high","\r"), file = fileConn)
for (l in lines[-1]) {
l <- strsplit(l,',')[[1]]
cat(paste(l[1], l[2], "\r"), file = fileConn)
}
close(fileConn)
paste(wd, '/', 'temp_spec.txt')
strings <- paste(cfm_id,
paste(wd, '/', 'temp_spec.txt', sep=''),
'AN_ID',
candidate_file)
strings
shell(strings)
cfm_id <- "D:/CFM-ID/cfm-id-2.4_win32/cfm-id.exe"
spectrum_file <- "E:/project/KMetC/kegg/kegg_measured_msms_spectra/C00002_40V.csv"
candidate_file <- "E:/project/KMetC/challenges/candidates/C00002.txt"
cfm_id <- "D:/CFM-ID/cfm-id-2.4_win32/cfm-id.exe"
spectrum_file <- "E:/project/KMetC/kegg/kegg_measured_msms_spectra/C00002_40V.csv"
candidate_file <- "E:/project/KMetC/challenges/candidates/C00002.txt"
para1 <- "D:/CFM-ID/cfm-id-2.4_win32/metab_se/param_output0.log"
para2 <- "D:/CFM-ID/cfm-id-2.4_win32/metab_se/param_config.txt"
strings <- paste(cfm_id,
paste(wd, '/', 'temp_spec.txt', sep=''),
'AN_ID',
candidate_file,
"5 10.0 0.01 0.001",
para1,
para2)
shell(strings)
load("E:/project/Forks/quBing/data/zhuMetlib.rda")
measured_spectra_zhu <- zhuMetlib$compound$pos
MsfinderStructureDB.VS12 <- read.delim("E:/project/KMet/data/hmdb/MsfinderStructureDB-VS12.txt")
View(MsfinderStructureDB.VS12)
write.csv(MsfinderStructureDB.VS12, 'StructureDB.csv', row.names = F)
View(MsfinderStructureDB.VS12)
nrow(MsfinderStructureDB.VS12)
MsfinderStructureDB.VS12 <- read.delim("D:/MS-FINDER/Resources/MsfinderStructureDB-VS12.esd")
View(MsfinderStructureDB.VS12)
library(readr)
setwd('E:/project/KMet')
runSIRIUS <- function(mass, formula, spec.file){
sirius <- "D:/SIRIUS/sirius-win64-headless-4.0.1/sirius-console-64.exe"
dir.create('temp')
out.dir <- paste(getwd(), 'temp', sep = '/')
strings <- paste(sirius,
paste('-z', mass+1.007825),
paste('-f', formula),
paste('-i', '[M+H]+'),
paste('-2', spec.file),
paste('-o', out.dir),
paste('--fingerid'),
paste('--database', 'all'))
system(strings, show.output.on.console = FALSE)
res <- read_delim(paste(list.dirs(out.dir,recursive = FALSE), 'summary_csi_fingerid.csv', sep = '/'),
"\t", escape_double = FALSE, trim_ws = TRUE)
return(res)
}
challenges <- read.csv('data/known_compounds.csv', stringsAsFactors = FALSE)
rank.sirius <- matrix(NA, nrow=nrow(challenges), ncol=2)
colnames(rank.sirius) <- c('kegg', 'rank')
for (i in 1:nrow(challenges)){
try(unlink('temp', recursive = TRUE))
keggid <- challenges[i, 'kegg']
formula <- challenges[i, 'formula']
mass <- challenges[i, 'mass']
true <- challenges[i, 'pubchem']
spec.file <- paste(getwd(), '/data/spectra/measured_spectra/40V/', keggid, '.csv', sep='')
res.sirius <- try(runSIRIUS(mass, formula, spec.file))
if (class(res.sirius)=='try-error'){
rank <- NA
} else {
pubchemids <- try(strsplit(res.sirius$pubchemids, ';'))
if (class(pubchemids)=='try-error'){pubchemids <- res.sirius$pubchemids}
rank <- which(sapply(pubchemids, function(ids) true%in%ids))[1]
}
rank.sirius[i,] <- c(keggid, rank)
cat(paste(keggid, ': ', rank, '\n', sep = ''))
if (i%%50==0 | i==nrow(challenges)){
write.csv(rank.sirius, 'results/search_result_pubchem_csifingerid_40V.csv')
}
}
pubchemids
res.sirius$pubchemids
res.sirius
